pipeline {
    agent {
        docker {
            image 'dlambrig/gradle-agent:latest'
            args '-u root --network host -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        WORKSPACE_SAMPLE1 = 'Chapter08/sample1'
        WORKSPACE_SAMPLE3 = 'Chapter09/sample3'
        KUBECONFIG_PATH = '/var/jenkins_home/.kube/config'
    }

    stages {
        stage('Prepare Gradle Wrapper') {
            steps {
                dir("${WORKSPACE_SAMPLE3}") {
                    sh 'chmod +x ./gradlew'
                }
            }
        }

        stage('Deploy Calculator and Hazelcast') {
            steps {
                dir("${WORKSPACE_SAMPLE1}") {
                    sh "KUBECONFIG=${KUBECONFIG_PATH} kubectl apply -f hazelcast.yaml"
                    sh "KUBECONFIG=${KUBECONFIG_PATH} kubectl apply -f calculator.yaml"
                    sh 'sleep 20'
                }
            }
        }

        stage('Run Acceptance Tests') {
            steps {
                dir("${WORKSPACE_SAMPLE3}") {
                    sh "KUBECONFIG=${KUBECONFIG_PATH} kubectl port-forward service/calculator-service 8765:8080 &"
                    sh 'sleep 5'
                    sh './gradlew acceptanceTest -Dcalculator.url=http://localhost:8765'
                }
            }
        }

        stage('Publish Acceptance Test Report') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                publishHTML([
                    reportDir: 'Chapter09/sample3/build/reports/tests/acceptanceTest',
                    reportFiles: 'index.html',
                    reportName: 'Acceptance Test Report'
                ])
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            sh "KUBECONFIG=${KUBECONFIG_PATH} kubectl delete -f ${WORKSPACE_SAMPLE1}/hazelcast.yaml"
            sh "KUBECONFIG=${KUBECONFIG_PATH} kubectl delete -f ${WORKSPACE_SAMPLE1}/calculator.yaml"
            sh "pkill -f 'kubectl port-forward' || true"
        }
        success {
            echo 'Acceptance tests passed.'
        }
        failure {
            echo 'Acceptance tests failed.'
        }
    }
}

