pipeline {
    agent { label 'docker-agent' }

    environment {
        WORKSPACE_SAMPLE3 = "Chapter09/sample3"
        WORKSPACE_SAMPLE1 = "Chapter08/sample1"
        KUBECONFIG_PATH = "/var/jenkins_home/.kube/config"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Yullik/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git'
            }
        }

        stage('Prepare Gradle Wrapper') {
            steps {
                dir("${WORKSPACE_SAMPLE3}") {
                    sh 'chmod +x ./gradlew'
                }
            }
        }

        stage('Deploy Calculator and Hazelcast') {
            steps {
                dir("${WORKSPACE_SAMPLE1}") {
                    sh "KUBECONFIG=${KUBECONFIG_PATH} kubectl apply -f hazelcast.yaml"
                    sh "KUBECONFIG=${KUBECONFIG_PATH} kubectl apply -f calculator.yaml"
                    sh 'sleep 20'
                }
            }
        }

        stage('Run Acceptance Tests') {
            steps {
                dir("${WORKSPACE_SAMPLE3}") {
                    // Port-forward the calculator service to localhost
                    sh "KUBECONFIG=${KUBECONFIG_PATH} kubectl port-forward service/calculator-service 8765:8080 &"
                    sh 'sleep 5'
                    sh './gradlew acceptanceTest -Dcalculator.url=http://localhost:8765'
                }
            }
        }

        stage('Publish Acceptance Test Report') {
            steps {
                publishHTML(target: [
                    reportDir: "${WORKSPACE_SAMPLE3}/build/reports/tests/acceptanceTest",
                    reportFiles: 'index.html',
                    reportName: 'Acceptance Test Report'
                ])
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            sh "KUBECONFIG=${KUBECONFIG_PATH} kubectl delete -f ${WORKSPACE_SAMPLE1}/hazelcast.yaml || true"
            sh "KUBECONFIG=${KUBECONFIG_PATH} kubectl delete -f ${WORKSPACE_SAMPLE1}/calculator.yaml || true"
            sh 'pkill -f "kubectl port-forward" || true'
        }
        success {
            echo "Acceptance tests passed."
        }
        failure {
            echo "Acceptance tests failed."
        }
    }
}
