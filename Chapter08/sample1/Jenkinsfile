pipeline {
    agent { label 'docker-agent' } 
    environment {
        GRADLEW_PATH = "./gradlew"  
        BUILD_TIMESTAMP = "${env.BUILD_ID}"
        WORKSPACE_JAVA = "./Chapter08/sample1/"
        DOCKER_CREDENTIALS_ID = 'dockerhub-creds'  //added credentials
    }
    triggers {
        pollSCM('* * * * *') 
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/Yullik/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git'
            }
        }

        stage('Prepare Gradle Wrapper') {
            steps {
                dir("${WORKSPACE_JAVA}"){
                sh "chmod +x ${GRADLEW_PATH}"  
                }
            }
        }

        stage('Build') {
            steps {
                    dir("${WORKSPACE_JAVA}") {  
                    sh "${GRADLEW_PATH} build"  
                }
            }
        }

        stage('Unit test') {
            steps {
                    dir("${WORKSPACE_JAVA}") {  
                    sh "${GRADLEW_PATH} test" 
                }
            }
        }

        stage('Code coverage') {
            steps {
                    dir("${WORKSPACE_JAVA}") {  
                    sh "${GRADLEW_PATH} jacocoTestReport"  
                    sh "${GRADLEW_PATH} jacocoTestCoverageVerification" 
                }
            }
        }

        stage('Static code analysis') {
            steps {
                    dir("${WORKSPACE_JAVA}") {  
                    sh "${GRADLEW_PATH} checkstyleMain" 
                }
            }
        }

        stage('Jacoco Checkstyle Test') {
            steps {
                    dir("${WORKSPACE_JAVA}") {  
                    sh "${GRADLEW_PATH} checkstyleTest"  
                    publishHTML(target: [
                        reportDir: 'build/reports/checkstyle',  
                        reportFiles: 'main.html',  
                        reportName: "Jacoco Checkstyle"
                    ])  
                }
            }
        }

        stage('Package') {
            steps {
                    dir("${WORKSPACE_JAVA}") {  
                    sh "${GRADLEW_PATH} build"
                 }
            }
        }

        stage('Docker build') {
            steps {
                    dir("${WORKSPACE_JAVA}") { 
                    sh "docker build -t yullik/calculator:${BUILD_TIMESTAMP} ." 
                }
            }
        }

        stage('Docker login') {
            steps {
                withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD'  
                }
            }
        }

        stage('Docker push') {
            steps {
                sh "docker push yullik/calculator:${BUILD_TIMESTAMP}" 
            }
        }

        stage('Update version') {
            steps {
                dir("${WORKSPACE_JAVA}") {  
                    sh "sed -i 's/{{VERSION}}/${BUILD_TIMESTAMP}/g' calculator.yaml" 
                }
            }
        }
        

        stage('Acceptance test') {
            steps {
                sleep 60  // Wait for deployments
                sh "chmod +x acceptance-test.sh && ./acceptance-test.sh"  // Run acceptance tests
            }
        }


        stage('Smoke test') {
            steps {
                sleep 60  // Wait for deployments
                sh "chmod +x smoke-test.sh && ./smoke-test.sh"  // Run smoke tests
            }
        }
    }
    post {
        success {
            echo "pipeline ran perfectly"
        }
        failure {
            echo "pipeline failure"
        }
    }
}

