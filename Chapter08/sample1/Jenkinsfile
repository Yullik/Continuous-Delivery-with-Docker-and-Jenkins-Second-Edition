pipeline {
    agent any
    environment {
        REPO_URL = 'https://github.com/Yullik/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git'
        GRADLEW_PATH = './gradlew'
        BUILD_TIMESTAMP = "${env.BUILD_ID}"
    }
    triggers {
        pollSCM('* * * * *')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: REPO_URL
            }
        }

        stage('Build') {
            steps {
                dir('Chapter08/sample1') {
                    sh './gradlew build'
                }
            }
        }

        stage('Deploy if Build Succeeded') {
            when {
                success()
            }
            steps {
                echo 'Deploying application...'
            }
        }

        stage('Notify if Build Failed') {
            when {
                failure()
            }
            steps {
                echo 'Sending failure notification...'
            }
        }

        stage('Run Integration Tests') {
            when {
                expression {
                    return currentBuild.rawBuild.getPreviousBuild()?.getResult()?.toString() == 'SUCCESS'
                }
            }
            steps {
                dir('Chapter08/sample1') {
                    sh './gradlew integrationTest'
                }
            }
        }

        stage('Code coverage') {
            when {
                changeset '**/*.java'
            }
            steps {
                dir('Chapter08/sample1') {
                    sh './gradlew jacocoTestReport'
                    sh './gradlew jacocoTestCoverageVerification'
                }
            }
        }

        stage('Static code analysis') {
            when {
                changeset '**/*.java'
            }
            steps {
                dir('Chapter08/sample1') {
                    sh './gradlew checkstyleMain'
                }
            }
        }

        stage('Jacoco Checkstyle Test') {
            when {
                changeset '**/*.java'
            }
            steps {
                dir('Chapter08/sample1') {
                    sh './gradlew checkstyleTest'
                    publishHTML(target: [
                        reportDir: 'build/reports/checkstyle',
                        reportFiles: 'main.html',
                        reportName: "Jacoco Checkstyle"
                    ])
                }
            }
        }

        stage('Update version') {
            steps {
                dir('Chapter08/sample1') {
                    sh "sed -i 's/{{VERSION}}/${BUILD_TIMESTAMP}/g' calculator.yaml"
                }
            }
        }

        stage('Deploy to staging') {
            steps {
                sh "kubectl config use-context staging"
                sh "kubectl apply -f hazelcast.yaml"
                sh "kubectl apply -f calculator.yaml"
            }
        }

        stage('Acceptance test') {
            steps {
                sleep 60
                sh "chmod +x acceptance-test.sh && ./acceptance-test.sh"
            }
        }

        stage('Release') {
            steps {
                sh "kubectl config use-context production"
                sh "kubectl apply -f hazelcast.yaml"
                sh "kubectl apply -f calculator.yaml"
            }
        }

        stage('Smoke test') {
            steps {
                sleep 60
                sh "chmod +x smoke-test.sh && ./smoke-test.sh"
            }
        }
    }

    post {
        failure {
            echo 'Pipeline failure'
        }
        success {
            echo 'Pipeline ran perfectly'
        }
    }
}
