pipeline {
    agent { label 'docker-agent' }

    environment {
        IMAGE_NAME = "yullik/calculator"
        LOCAL_REGISTRY = "localhost:5000"
        IMAGE_TAG = "latest"
        IMAGE_FULL = "${LOCAL_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
        KUBECONFIG_PATH = "/var/jenkins_home/.kube/config"
    }

    triggers {
        pollSCM('H/5 * * * *')
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/Yullik/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git', branch: 'main'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir("Chapter08/sample1") {
                    sh "docker build -t ${IMAGE_FULL} ."
                }
            }
        }

        stage('Push to Local Registry') {
            steps {
                sh "docker push ${IMAGE_FULL}"
            }
        }

        stage('Deploy to Staging (Docker Desktop)') {
            steps {
                dir("Chapter08/sample1") {
                    sh '''
                        kubectl config use-context docker-desktop
                        export KUBECONFIG='${KUBECONFIG_PATH}'
                        kubectl apply -f calculator.yaml --validate=false
                        kubectl apply -f hazelcast.yaml --validate=false
                        sleep 10
                    '''
                }
            }
        }

        stage('Test in Staging') {
            steps {
                dir("Chapter08/sample1") {
                    script {
                        sh '''
                            nohup kubectl port-forward service/calculator-service 8765:8080 &
                            sleep 5
                            curl --fail http://localhost:8765/sum?a=2\\&b=3
                        '''
                    }
                }
            }
        }

        stage('Deploy to Production (Google GKE)') {
            steps {
                dir("Chapter08/sample1") {
                    sh '''
                        kubectl config use-context gke_umls24-418119_us-central1_hello-cluster
                        export KUBECONFIG='${KUBECONFIG_PATH}'
                        kubectl apply -f calculator.yaml --validate=false
                        kubectl apply -f hazelcast.yaml --validate=false
                    '''
                }
            }
        }

        stage('Verify Production Pods') {
            steps {
                sh '''
                    kubectl get pods
                '''
            }
        }
    }

    post {
        always {
            echo "Pipeline execution complete."
        }
    }
}

