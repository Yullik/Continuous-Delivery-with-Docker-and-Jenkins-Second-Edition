pipeline {
    agent { label 'docker-agent' }

    environment {
        IMAGE_NAME = "calculator"
        LOCAL_IMAGE = "yullik/calculator:latest"
        REGISTRY_IMAGE = "localhost:5000/calculator:latest"
        STAGING_CONTEXT = "docker-desktop"
        PROD_CONTEXT = "gke_umls24-418119_us-central1_hello-cluster"
        KUBECONFIG_PATH = "/var/jenkins_home/.kube/config"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/Yullik/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git', branch: 'main'
            }
        }

        stage('Build Image') {
            steps {
                dir("Chapter08/sample1") {
                    sh './gradlew clean build'
                    sh 'docker build -t ${LOCAL_IMAGE} .'
                }
            }
        }

        stage('Push to Local Registry') {
            steps {
                sh 'docker tag ${LOCAL_IMAGE} ${REGISTRY_IMAGE}'
                sh 'docker push ${REGISTRY_IMAGE}'
            }
        }

        stage('Deploy to Staging') {
            steps {
                dir("Chapter08/sample1") {
                    sh 'kubectl config use-context ${STAGING_CONTEXT}'
                    sh 'kubectl apply -f calculator.yaml --validate=false'
                    sh 'kubectl apply -f hazelcast.yaml --validate=false'
                }
            }
        }

        stage('Acceptance Test in Staging') {
            steps {
                dir("Chapter08/sample1") {
                    sh '''
                        nohup kubectl --kubeconfig=${KUBECONFIG_PATH} port-forward service/calculator-service 8765:8080 &
                        sleep 5
                        curl http://localhost:8765/sum?a=2\\&b=3
                    '''
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                dir("Chapter08/sample1") {
                    sh 'kubectl config use-context ${PROD_CONTEXT}'
                    sh 'kubectl apply -f calculator.yaml --validate=false'
                    sh 'kubectl apply -f hazelcast.yaml --validate=false'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
    }
}

